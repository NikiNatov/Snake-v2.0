<UserControl x:Class="SnakeGame.UI.Game"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SnakeGame.UI"
             xmlns:snake="clr-namespace:SnakeGame"
             mc:Ignorable="d" 
             d:DesignHeight="992" d:DesignWidth="1524" MouseMove="OnMouseMove">
    <UserControl.Resources>
        <snake:PauseMenuVisibilityConverter x:Key="PauseMenuVisibility"/>
        <snake:GameOverMenuVisibilityConverter x:Key="GameOverMenuVisibility"/>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Canvas Grid.Column="0" Width="960" Height="992" x:Name="canvas">
            <Canvas.Background>
                <ImageBrush ImageSource="pack://application:,,,/Assets/Textures/ground.png" Viewport="0, 0, 0.16, 0.16" TileMode="Tile"/>
            </Canvas.Background>
            <!-- Drawing all the entities in the world as rectangles -->
            <ItemsControl ItemsSource="{Binding Path=GameObjects}">
                <ItemsControl.Resources>

                    <!-- Snake Component representation template-->
                    <DataTemplate DataType="{x:Type snake:SnakeComponent}">
                        <Ellipse Width="{Binding Path=Width}" Height="{Binding Path=Height}" Fill="{Binding Path=Texture.Brush}" RenderTransformOrigin="0.5, 0.5">
                            <Ellipse.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform x:Name="scaleTransform" ScaleX="{Binding Path=Transformation.Scale.X}" ScaleY="{Binding Path=Transformation.Scale.Y}"/>
                                    <RotateTransform x:Name="rotateTransform" Angle="{Binding Path=Transformation.RotationAngle}"/>
                                    <TranslateTransform x:Name="translateTransform" X="{Binding Path=Transformation.Position.X}" Y="{Binding Path=Transformation.Position.Y}"/>
                                </TransformGroup>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                    </DataTemplate>

                    <!-- Obstacle representation template-->
                    <DataTemplate DataType="{x:Type snake:Obstacle}">
                        <Rectangle Width="{Binding Path=Width}" Height="{Binding Path=Height}" Fill="{Binding Path=Texture.Brush}" RenderTransformOrigin="0.5, 0.5">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform x:Name="scaleTransform"  ScaleX="{Binding Path=Transformation.Scale.X}" ScaleY="{Binding Path=Transformation.Scale.Y}"/>
                                    <RotateTransform x:Name="rotateTransform"  Angle="{Binding Path=Transformation.RotationAngle}"/>
                                    <TranslateTransform x:Name="translateTransform"  X="{Binding Path=Transformation.Position.X}" Y="{Binding Path=Transformation.Position.Y}"/>
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                    </DataTemplate>

                    <!-- Fruit representation template-->
                    <DataTemplate DataType="{x:Type snake:Fruit}">
                        <Rectangle Width="{Binding Path=Width}" Height="{Binding Path=Height}" Fill="{Binding Path=Texture.Brush}" RenderTransformOrigin="0.5, 0.5">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform x:Name="scaleTransform"  ScaleX="{Binding Path=Transformation.Scale.X}" ScaleY="{Binding Path=Transformation.Scale.Y}"/>
                                    <RotateTransform x:Name="rotateTransform"  Angle="{Binding Path=Transformation.RotationAngle}"/>
                                    <TranslateTransform x:Name="translateTransform"  X="{Binding Path=Transformation.Position.X}" Y="{Binding Path=Transformation.Position.Y}"/>
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                    </DataTemplate>
                </ItemsControl.Resources>

                <!-- Panel style-->
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>

        </Canvas>

        <!-- Side menu -->
        <StackPanel Grid.Column="1" Orientation="Vertical">
            <StackPanel.Background>
                <ImageBrush ImageSource="pack://application:,,,/Resource/score_board_background.jpg"/>
            </StackPanel.Background>

            <!-- Render score -->
            <StackPanel Orientation="Horizontal" Margin="40">
                <Label Foreground="White" FontSize="50" FontWeight="Bold"  Content="Score:"/>
                <Label Foreground="White" FontSize="50" FontWeight="Bold"  Content="{Binding Path=Score}"/>
            </StackPanel>

            <Border Background="Green" BorderBrush="Black" BorderThickness="10" Height="440" Margin="40" Padding="20">
                <!-- Render fruits on the board -->
                <ItemsControl ItemsSource="{Binding GameObjects}">
                    <ItemsControl.Resources>

                        <!-- If the type is a fruit display stats -->
                        <DataTemplate DataType="{x:Type snake:Fruit}">
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                <Rectangle Width="64" Height="64" Fill="{Binding Path=Texture.Brush}" Margin="20,0,60,0"/>
                                <TextBlock FontSize="50" Foreground="White" Text="+"/>
                                <TextBlock FontSize="50" Foreground="White" Text="{Binding Path=ScorePoints}"/>
                                <TextBlock FontSize="50" Foreground="White" Text=" Points"/>
                            </StackPanel>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type snake:SnakeComponent}">

                        </DataTemplate>

                        <DataTemplate DataType="{x:Type snake:Obstacle}">

                        </DataTemplate>
                    </ItemsControl.Resources>

                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                </ItemsControl>
            </Border>
            
        </StackPanel>

        <!-- Pause Menu -->
        <Border x:Name="PauseMenu" Visibility="{Binding State, Converter={StaticResource PauseMenuVisibility}}" Padding="20" Grid.RowSpan="2" Background="White" Grid.ColumnSpan="2" BorderBrush="Black" BorderThickness="6" HorizontalAlignment="Center" Width="600" Height="600">
            <StackPanel>
                <Button Width="30" Height="30" BorderBrush="Black" BorderThickness="4" Content="X" HorizontalAlignment="Right" FontWeight="Bold"
                        Command="{Binding UnpauseCommand}"/>
                <TextBlock Text="Pause" FontFamily="Arial" HorizontalAlignment="Center" FontSize="50" FontWeight="Bold" Margin="0, 0, 0 60"/>
                <Button BorderBrush="Black" BorderThickness="8" Content="Continue" FontSize="50" FontFamily="Arial"  Margin="0, 0, 0 60"
                        Command="{Binding UnpauseCommand}"/>
                <Button BorderBrush="Black" BorderThickness="8" Content="Return to the Menu" FontSize="50" FontFamily="Arial"  Margin="0, 0, 0 60"
                        Command="{Binding DataContext.MainMenuCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                <Button BorderBrush="Black" BorderThickness="8" Content="Exit" FontSize="50" FontFamily="Arial"  Margin="0, 0, 0 60" 
                        Command="{Binding DataContext.ExitCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
            </StackPanel>
        </Border>

        <!-- Game over menu-->
        <Border x:Name="GameOverScreen" Visibility="{Binding State, Converter={StaticResource GameOverMenuVisibility}}" Padding="20" Grid.RowSpan="2" Background="White" Grid.ColumnSpan="2" BorderBrush="Black" BorderThickness="6" HorizontalAlignment="Center" Width="600" Height="600">
            <StackPanel>
                <TextBlock Text="You lose" FontFamily="Arial" HorizontalAlignment="Center" FontSize="50" FontWeight="Bold" Margin="0, 0, 0 10"/>
                <StackPanel Orientation="Horizontal" Margin="0, 0, 0 60" HorizontalAlignment="Center">
                    <TextBlock Text="Score: " FontFamily="Arial" HorizontalAlignment="Center" FontSize="50" FontWeight="Bold" />
                    <TextBlock Text="{Binding Score}" FontFamily="Arial" HorizontalAlignment="Center" FontSize="50" FontWeight="Bold"/>
                </StackPanel>
                <Button Content="New Game" BorderBrush="Black" BorderThickness="8" FontSize="50" FontFamily="Arial"  Margin="0, 0, 0 40"
                        Command="{Binding RestartCommand}"/>
                <Button Content="Return to the Menu"  BorderBrush="Black" BorderThickness="8" FontSize="50" FontFamily="Arial"  Margin="0, 0, 0 40"
                        Command="{Binding DataContext.MainMenuCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                <Button BorderBrush="Black" BorderThickness="8" Content="Exit" FontSize="50" FontFamily="Arial"  Margin="0, 0, 0 60" 
                        Command="{Binding DataContext.ExitCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
            </StackPanel>
        </Border>

    </Grid>
</UserControl>
